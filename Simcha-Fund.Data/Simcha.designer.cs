#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Simcha_Fund.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.ComponentModel.DataAnnotations.Schema;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SimchaFund")]
	public partial class SimchaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSimcha(Simcha instance);
    partial void UpdateSimcha(Simcha instance);
    partial void DeleteSimcha(Simcha instance);
    #endregion
		
		public SimchaDataContext() : 
				base(global::Simcha_Fund.Data.Properties.Settings.Default.SimchaFundConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SimchaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SimchaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SimchaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SimchaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Simcha> Simchas
		{
			get
			{
				return this.GetTable<Simcha>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Simchas")]
	public partial class Simcha : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SimchaName;
		
		private System.DateTime _SimchaDate;

        [NotMapped]
        public int ContributorAmount;

        [NotMapped]
        public decimal Total;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSimchaNameChanging(string value);
    partial void OnSimchaNameChanged();
    partial void OnSimchaDateChanging(System.DateTime value);
    partial void OnSimchaDateChanged();
    #endregion
		
		public Simcha()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimchaName", DbType="VarChar(50)", CanBeNull=false)]
		public string SimchaName
		{
			get
			{
				return this._SimchaName;
			}
			set
			{
				if ((this._SimchaName != value))
				{
					this.OnSimchaNameChanging(value);
					this.SendPropertyChanging();
					this._SimchaName = value;
					this.SendPropertyChanged("SimchaName");
					this.OnSimchaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimchaDate", DbType="Date")]
		public System.DateTime SimchaDate
		{
			get
			{
				return this._SimchaDate;
			}
			set
			{
				if ((this._SimchaDate != value))
				{
					this.OnSimchaDateChanging(value);
					this.SendPropertyChanging();
					this._SimchaDate = value;
					this.SendPropertyChanged("SimchaDate");
					this.OnSimchaDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
